name: Deploy to Firebase Hosting on merge

on:
  push:
    branches:
      - master

jobs:
  build_and_deploy:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      # Install Firebase CLI
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      # Install dependencies
      - name: Install dependencies
        run: cd Frontend && npm install

      # Build the project
      - name: Build the project
        env:
          VITE_BACKEND_HOST_URL: ${{ vars.VITE_BACKEND_HOST_URL }}
          VITE_RAZORPAY_KEY_ID: ${{ vars.VITE_RAZORPAY_KEY_ID }}
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ vars.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ vars.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ vars.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ vars.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ vars.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ vars.VITE_FIREBASE_MEASUREMENT_ID }}
        run: cd Frontend && npm run build

      # Login to Firebase using a service account
      - name: Login to Firebase with service account
        uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_SAMTOCODE24 }}

      # Deploy to Firebase Hosting
      - name: Deploy to Firebase Hosting
        run: |
          cd Frontend
          firebase deploy

      # Success notification (optional)
      - name: Deployment Successful!
        if: success() # Only run this step if all previous steps succeed
        run: echo "Deployment to Firebase Hosting successful!"
